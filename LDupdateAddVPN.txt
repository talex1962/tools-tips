UPDATING A LITTLE DEVICE AND ADDING THE VPN SERVICE
---------------------------------------------------

NOTE: this is ONLY for an LD that was not shipped with the VPN service installed, and needs
a first-time install of the VPN software. After executing these instructions once, revert to
running the standard upgrade instructions (LDupdate.txt).
NOTE: login to 192.168.1.1 or 192.168.2.1 as 'ld-admin', password 'friday'; the sudo password
is also 'friday'

1. Download 32-bit SoftEther Linux vpnserver and build it:

    cd /tmp
    wget http://www.softether-download.com/files/softether/v4.11-9506-beta-2014.10.22-tree/Linux/SoftEther_VPN_Server/32bit_-_Intel_x86/softether-vpnserver-v4.11-9506-beta-2014.10.22-linux-x86-32bit.tar.gz

    sudo tar zxvf softether-vpnserver-v4.11-9506-beta-2014.10.22-linux-x86-32bit.tar.gz -C /usr/local
    cd /usr/local/vpnserver
    sudo apt-get install -y build-essential
    sudo make
        -- type '1' to indicate reading the License Agreement, '1' to indicate agreement,
            '1' to continue
    sudo chmod -R 600 *
    sudo chmod 700 vpnserver vpncmd
    cd ..
    sudo chmod 700 vpnserver
    sudo /usr/local/vpnserver/vpncmd /TOOLS /CMD check

2. Update the LD source tree

    cd /home/ld-admin/src/ld
    git pull origin
        -- Git password is 'friday44'

3. Move new Python functions to /usr/local/lib/ld and make new JSON DBs in /var/lib/ld/db

    -- stop the manager daemons
    sudo supervisorctl
        supervisor> stop all
        supervisor> status
        supervisor> exit

    -- copy over the various files to their various locations
    sudo mkdir -p /usr/local/lib/ld
    sudo mkdir -p /var/lib/ld/db
    sudo cp -r /home/ld-admin/src/ld/libs /usr/local/lib/ld
    sudo cp -r /home/ld-admin/src/ld/littledev /usr/local/lib/ld

    -- copy the various volume and VPN manager helper functions
    sudo cp /home/ld-admin/src/ld/littledev/devices/disk/funcs/*.py /usr/local/bin
    sudo cp /home/ld-admin/src/ld/libs/vpn/funcs/ld_vpnfuncs.py /usr/local/bin
    sudo chown root:root /usr/local/bin/*
    sudo chmod 0550 /usr/local/bin/*

4. Adjust the config file and make new JSON DBs in /var/lib/ld/db

    -- edit LDConfig.ini in /usr/local/etc and adapt to the specific site
    sudo rm -f /usr/local/lib/ld/littledev/LDConfig.ini
    sudo cp /home/ld-admin/src/ld/littledev/LDConfig.ini /usr/local/etc
    sudo vi /usr/local/etc/LDConfig.ini
        -- add/modify the items in the various sections as below (LEAVE OTHERS ALONE!):
        [DEFAULT]
        DBPath = /var/lib/ld/db
        logPath = /var/log

        [DB]
        # the VPNLink config and status database files
        VPNLinkConfigDBFile = %(DBPath)s/VPNLinkConfigDB.json
        VPNLinkStatusDBFile = %(DBPath)s/VPNLinkStatusDB.json

        [MAIN]
        fileLogLevel = INFO
        consoleLogLevel = WARNING

        [COMMSMGR]
        GUID = 9876543210
        deviceName = Marthas Cakes

        [VPNMGR]
        password = Friday2014

        [DEVICE0]
        type = AP
        IPAddr = 192.168.1.63

        [DEVICE1]
        type = switch
        IPAddr = 192.168.1.64

        [DEVICE2]
        type = disk
        size = 20.0

    -- create the JSON device databases
    cd /usr/local/lib/ld/littledev/db
    sudo python makeLDDB.py
    sudo chown -R ld-admin:ld-admin /var/lib/ld

5. Update init to autostart VPN server, start server, set password, verify OK

    sudo cp /usr/local/lib/ld/libs/vpn/funcs/vpnserver /etc/init.d
    sudo chmod 755 /etc/init.d/vpnserver
    sudo update-rc.d vpnserver defaults
    sudo /etc/init.d/vpnserver start
    sudo /usr/local/vpnserver/vpncmd localhost:443 /SERVER /CMD ServerPasswordSet Friday2014
    sudo /usr/local/vpnserver/vpncmd localhost:443 /TOOLS /CMD check
    sudo /usr/local/vpnserver/vpncmd localhost:443 /SERVER /PASSWORD:Friday2014 /CMD ServerStatusGet

6. Configure the VPN server to act as a cascading bridge

    cd /usr/local/lib/ld/libs/vpn/funcs
    sudo /usr/local/vpnserver/vpncmd localhost:443 /SERVER /PASSWORD:Friday2014 /IN:bridgesetup.bat
    sudo /usr/local/vpnserver/vpncmd localhost:443 /SERVER /PASSWORD:Friday2014 /CMD HubList

7. Set up VPN system funcs

    -- install pyparsing
    sudo pip install pyparsing

    -- modify sudoers file to allow VPN funcs to run
    sudo vi /etc/sudoers
        -- modify:
        Cmnd_Alias VPNFUNCS_CMDS = /usr/local/bin/ld_vpnfuncs.py
        Cmnd_Alias LDFUNCS = LVFUNCS_CMDS,FSFUNCS_CMDS,SMBFUNCS_CMDS,VPNFUNCS_CMDS

    NOTE: will have to exit vi with ':wq!' in order to override read-only permissions.

8. Add VPN manager to supervisord

    sudo vi /etc/supervisor/conf.d/VPNMgr.conf
        -- modify:
        [program:VPNManager]
        command=python -u VPNManager.py
        process_name=VPNManager
        directory=/usr/local/lib/ld/littledev
        stdout_logfile=/tmp/ram/VPNConsole.log
        stdout_logfile_backups=1
        stdout_logfile_maxbytes=500KB
        redirect_stderr=true
        autostart=true
        autorestart=true
        startretries=1000
        user=ld-admin

9. Restart the various manager daemons
    sudo supervisorctl
        supervisor> reread
        supervisor> update
        supervisor> restart all
        supervisor> status
            -- this should show RUNNING for all four daemons
            -- note process IDs, now wait for 5 seconds
        supervisor> status
            -- this should still show RUNNING for all four daemons
            -- the process IDs should be the same as before
        supervisor> exit

10. Final cleanup and reboot

    sudo reboot

11. Log in again as ld-admin and verify that the daemons are running

    ps aux | grep python
        -- should see lines with 'commsManager', 'diskManager', 'LANManager',
            'VPNManager'

    NOTE: to stop and/or restart the daemons:
        sudo supervisorctl
            supervisor> stop <daemon: commsManager, LANManager, diskManager, VPNManager>
                - or -
            supervisor> stop all

            supervisor> restart <daemon: commsManager, LANManager, diskManager, VPNManager>
                - or -
            supervisor> restart all
